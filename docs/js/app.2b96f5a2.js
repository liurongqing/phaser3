!function(n){var e={};function t(a){if(e[a])return e[a].exports;var r=e[a]={i:a,l:!1,exports:{}};return n[a].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=n,t.c=e,t.d=function(n,e,a){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:a})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var a=Object.create(null);if(t.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)t.d(a,r,function(e){return n[e]}.bind(null,r));return a},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="/phaser3",t(t.s=20)}([function(n,e,t){n.exports=t(3)(0)},function(n,e,t){n.exports=t(15)(834)},function(n,e,t){n.exports=t(3)(24)},function(n,e){n.exports=react},function(n,e){n.exports=lib},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a=s(t(18)),r=s(t(6));function s(n){return n&&n.__esModule?n:{default:n}}function o(){return(o=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(n[a]=t[a])}return n}).apply(this,arguments)}var c={lang:o({placeholder:"请选择日期",rangePlaceholder:["开始日期","结束日期"]},a.default),timePickerLocale:o({},r.default)};c.lang.ok="确 定";var l=c;e.default=l},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a={placeholder:"请选择时间"};e.default=a},function(n,e,t){n.exports=t(3)(20)},function(n,e,t){n.exports=t(4)(20)},function(n,e,t){n.exports=t(4)(107)},function(n,e,t){"use strict";var a;Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var r=((a=t(16))&&a.__esModule?a:{default:a}).default;e.default=r},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e){n.exports=antd},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a=c(t(17)),r=c(t(5)),s=c(t(6)),o=c(t(19));function c(n){return n&&n.__esModule?n:{default:n}}var l={locale:"zh-cn",Pagination:a.default,DatePicker:r.default,TimePicker:s.default,Calendar:o.default,global:{placeholder:"请选择"},Table:{filterTitle:"筛选",filterConfirm:"确定",filterReset:"重置",selectAll:"全选当页",selectInvert:"反选当页",sortTitle:"排序",expand:"展开行",collapse:"关闭行"},Modal:{okText:"确定",cancelText:"取消",justOkText:"知道了"},Popconfirm:{cancelText:"取消",okText:"确定"},Transfer:{searchPlaceholder:"请输入搜索内容",itemUnit:"项",itemsUnit:"项"},Upload:{uploading:"文件上传中",removeFile:"删除文件",uploadError:"上传错误",previewFile:"预览文件",downloadFile:"下载文件"},Empty:{description:"暂无数据"},Icon:{icon:"图标"},Text:{edit:"编辑",copy:"复制",copied:"复制成功",expand:"展开"},PageHeader:{back:"返回"}};e.default=l},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={items_per_page:"条/页",jump_to:"跳至",jump_to_confirm:"确定",page:"页",prev_page:"上一页",next_page:"下一页",prev_5:"向前 5 页",next_5:"向后 5 页",prev_3:"向前 3 页",next_3:"向后 3 页"},n.exports=e.default},function(n,e,t){"use strict";e.__esModule=!0,e.default={today:"今天",now:"此刻",backToToday:"返回今天",ok:"确定",timeSelect:"选择时间",dateSelect:"选择日期",weekSelect:"选择周",clear:"清除",month:"月",year:"年",previousMonth:"上个月 (翻页上键)",nextMonth:"下个月 (翻页下键)",monthSelect:"选择月份",yearSelect:"选择年份",decadeSelect:"选择年代",yearFormat:"YYYY年",dayFormat:"D日",dateFormat:"YYYY年M月D日",dateTimeFormat:"YYYY年M月D日 HH时mm分ss秒",previousYear:"上一年 (Control键加左方向键)",nextYear:"下一年 (Control键加右方向键)",previousDecade:"上一年代",nextDecade:"下一年代",previousCentury:"上一世纪",nextCentury:"下一世纪"},n.exports=e.default},function(n,e,t){"use strict";var a;Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var r=((a=t(5))&&a.__esModule?a:{default:a}).default;e.default=r},function(n,e,t){"use strict";t.r(e);var a=t(0),r=t(7),s=(t(11),t(12),t(13),t(14),t(1));const o=(n=location.search)=>new URLSearchParams(n),c=(n,e)=>n.filter((t,a)=>e?n.findIndex(n=>n[e]===t[e])===a:n.indexOf(t)===a),l=n=>JSON.parse(JSON.stringify(n)),i=(n,e=[])=>new Proxy(()=>{},{get:(t,a)=>i(n,e.concat(a)),apply(t,a,r){let s=n;for(let n=0;n<e.length&&null!=s;n++)s=s[e[n]];return null==s&&(s=r[0]),s}}),d=(n={},e=[])=>{const t={};return n=l(n),e.forEach(e=>{t[e]=n[e]}),t},u=n=>{const e=[];e[0]=n[0];let t=[];for(let a=1;a<n.length;a++)e[0].level===n[a].level?(t.length>0&&(e[e.length-1].children=u(t),t=[]),e.push(n[a])):t.push(n[a]);return t.length>0&&(e[e.length-1].children=u(t),t=[]),e},{createContext:p,useReducer:m}=a,h=p("global"),g={status:1,anchors:[]},P=(n,e)=>{const t={SET_STATUS:{...n,status:e.data.status},SET_ANCHORS:{...n,anchors:e.data.anchors}};return i(t)[e.type](n)};var f=t(10),x=t.n(f),E=t(2);function y(){return(y=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(n[a]=t[a])}return n}).apply(this,arguments)}var A=({routes:n})=>a.createElement(E.Switch,null,i(n)([]).map((n,e)=>n.redirect?a.createElement(E.Redirect,{key:e,from:n.from,to:n.to,exact:!0}):a.createElement(E.Route,{key:e,exact:n.exact,path:n.path,render:e=>a.createElement(n.component,y({},e,{routes:n.routes}))})));const{useEffect:C}=a;const{SubMenu:j}=s.Menu,{useEffect:v,useState:I,useMemo:S}=a;var T=Object(E.withRouter)(({location:n})=>{const[e,t]=I([]);v(()=>{t((({data:n=[],parents:e={value:0,field:"parentId"},columns:t=null,fields:a=null}={})=>{const r=l(n),s=(n,r)=>{let o=[];for(let l=0;l<n.length;l++)if(n[l][e.field]===r){if(n[l].children=s(n,n[l].id),0==n[l].children.length&&delete n[l].children,t)for(let e in t)Array.isArray(t[e])&&t[e].length>0?t[e].forEach(t=>{n[l][t]=n[l][e]}):n[l][t[e]]=n[l][e];o.push(a?d(n[l],c(a.concat("children"))):n[l])}return o};return s(r,e.value)})({data:z}))},[]);const r=n.pathname.match(/\/\w+/g),o=S(()=>(function n(e){return e.map(e=>e.children?a.createElement(j,{key:e.path,title:a.createElement("span",null,a.createElement("span",null,e.text))},n(e.children)):a.createElement(s.Menu.Item,{key:e.path},a.createElement(E.Link,{to:e.path},a.createElement("span",null,e.text))))})(e),[e]);return a.createElement(s.Menu,{theme:"light",mode:"inline",defaultSelectedKeys:[r.join("")],defaultOpenKeys:r,style:{height:"calc(100vh - 48px)",overflow:"auto"}},o)});const{Link:b}=s.Anchor,{useContext:R,useMemo:k}=a;var O=()=>{const{state:n}=R(h),{anchors:e}=n,t=k(()=>(function n(e){return e.map(e=>e.children?a.createElement(b,{key:e.title,href:e.href,title:e.title},n(e.children)):a.createElement(b,{key:e.title,href:e.href,title:e.title}))})(e),[e]);return a.createElement(s.Anchor,{affix:!1,style:{height:"calc(100vh - 48px)",overflow:"auto",paddingTop:30,paddingBottom:30},showInkInFixed:!0,getContainer:()=>window.document.querySelector(".phaser3-content")},t)};const{useState:M}=a,{Content:w,Header:F,Sider:D}=s.Layout;var G=t(8),_=t(9);const{useRef:L,useEffect:B}=a,{Paragraph:Y}=s.Typography;var N=({language:n,value:e})=>{const t=L(null);return B(()=>{_.highlightBlock(t.current)},[]),a.createElement("pre",null,a.createElement(Y,{copyable:{text:e}}),a.createElement("code",{ref:t,className:`language-${n}`},e))};const{useState:H,useEffect:U,useContext:W}=a;let V=[];const X=((n,e=50,t)=>{let a=null;return(...r)=>{a&&clearTimeout(a),t&&!a&&n.apply(void 0,r),a=setTimeout(()=>{n.apply(void 0,r)},e)}})(n=>{n({type:"SET_ANCHORS",data:{anchors:u(V)}}),V=[]},500);var q=({level:n,children:e})=>{const{dispatch:t}=W(h);return U(()=>{let a={level:n,href:`#${e[0].props.value}`,title:e[0].props.value};V.push(a),X(t)},[]),a.createElement(`h${n}`,{id:e[0].props.value},e)};const{useEffect:$,useContext:J}=a;var K=({source:n})=>{const{dispatch:e}=J(h);return $(()=>{e({type:"SET_ANCHORS",data:{anchors:[]}})},[]),a.createElement(G,{source:n,escapeHtml:!1,renderers:{heading:q,code:N}})};const z=[{id:10,parentId:0,text:"Home",path:"/home",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 学习进度\n\n边学边写\n\n## 已完成\n\n- [x] [Display](/phaser3/display)\n- [x] [Cache](/phaser3/cache)\n- [x] [Components Data](/phaser3/components/data)\n\n## 进行中\n\n- [ ] [Depth Sorting](/phaser3/depthsorting)\n"}))},{id:20,parentId:0,text:"Actions",path:"/actions",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 常用方法\n\n### Phaser.Actions.Call()\n\n> 遍历精灵组  \n> `Phaser.Actions.Call(items, callback, context)`\n\n```js\nconst groups = scene.add.group()\nPhaser.Actions.Call(\n  groups.getChildren(),\n  function(group) {\n    group.setName('1')\n  },\n  this\n)\n```\n\n### Phaser.Actions.GridAlign()\n\n> 排列精灵组  \n> `Phaser.Actions.GridAlign(items, options)`\n\n```js\nconst groups = scene.add.group()\nPhaser.Actions.GridAlign(groups.getChildren(), {\n  width: 2, // 列数\n  height: 2, // 行数\n  cellWidth: 100, // 列宽度\n  cellHeight: 100, // 行高度\n  position: Phaser.Display.Align.TOP_LEFT, // 元素相对单元格位置\n  x: 100, // 整个网格左上角横坐标\n  y: 100 // 整个网格左上角纵坐标\n})\n```\n\n### Phaser.Actons.IncX()\n\n> 横向移动  \n> `Phaser.Actons.IncX(items, value [,step] [,index] [,direction])`\n\n```js\nconst groups = scene.add.group()\nPhaser.Actons.IncX(\n  groups.getChildren(),\n  0.01, // 添加到 x 属性上的值\n  1, // xvalue = xvalue + step * i 后面递增\n  0, // 从 items 中下标为 0 开始搜索起\n  1 // direction: 1正向遍历  -1反向遍历\n)\n```\n\n### Phaser.Actions.IncY()\n\n> 纵向移动  \n> `Phaser.Actions.IncY(items, value [,step] [,index] [,diresction])`\n\n```js\nconst groups = scene.add.group()\nPhaser.Actons.IncY(\n  groups.getChildren(),\n  0.01, // 添加到 y 属性上的值\n  1, // yvalue = yvalue + step * i 后面递增\n  0, // 从 items 中下标为 0 开始搜索起\n  1 // direction: 1正向遍历  -1反向遍历\n)\n```\n\n### Phaser.Actions.IncXY()\n\n> 横纵向移动  \n> `Phaser.Actions.IncXY(items, x [,y] [,stepX] [,stepY] [,index] [,direction])`\n\n```js\nconst groups = scene.add.group()\nPhaser.Actons.IncXY(\n  groups.getChildren(),\n  0.01, // 添加到 x 属性上的值\n  0.01, // 添加到 y 属性上的值\n  1, // xvalue = xvalue + xstep * i 后面递增\n  1, // yvalue = yvalue + ystep * i 后面递增\n  0, // 从 items 中下标为 0 开始搜索起\n  1 // direction: 1正向遍历  -1返回遍历\n)\n```\n\n### Phaser.Actions.SetAlpha()\n\n> 设置透明度  \n> `Phaser.Actions.SetAlpha(items, value, [,step] [,index] [,direction])`\n\n```js\nconst groups = scene.add.group()\nPhaser.Actons.SetAlpha(\n  groups.getChildren(),\n  0.2, // 添加到 alpha 属性上的值\n  1, // value = value + step * i 后面递增\n  0, // 从 items 中下标为 0 开始搜索起\n  1 // direction: 1正向遍历  -1返回遍历\n)\n```\n\n### Phaser.Actions.Spread()\n\n> 基于属性设置一个区间传播渐变  \n> `Phaser.Actions.Spread(items, property, min, max, [,inc])`\n\n```js\nconst groups = scene.add.group()\nPhaser.Actions.Spread(\n  groups.getChildren(),\n  'alpha', // 属性\n  0, // 最小值\n  1, // 最大值\n  true // inc:  true为递增，false为递减\n)\n```\n\n### Phaser.Actions.SetXY()\n\n> 所有元素设置位置  \n> `Phaser.Actions.SetXY(items, x [,y] [,stepX] [,stepY] [,index] [,direction])`\n\n```js\nconst groups = scene.add.group()\nPhaser.Actions.SetXY(\n  groups.getChildren(),\n  10, // x 属性的值\n  10, // y 属性的值， 未定义则使用 x 属性的值\n  1, // xvalue = xvalue + xstep * i 后面递增\n  1, // yvalue = yvalue + ystep * i 后面递增\n  0, // 从 items 中下标为 0 开始搜索起\n  1 // direction: 1正向遍历  -1返回遍历\n)\n```\n\n### Phaser.Actions.ShiftPosition()\n\n> 改变位置， 尾影  \n> `Phaser.Actions.ShiftPosition(items, x, y [,direction] [output])`\n\n```js\nconst groups = scene.add.group()\nPhaser.Actions.ShiftPosition(\n  groups.getChildren(),\n  10, // 数组第一个项中的 x 属性值\n  10, // 数组第一个项中的 y 属性值\n  0, // direction： 0为第一个到最后一个  1反之\n  Phaser.Math.Vector2 // 最终存储对象位置的方式\n)\n```\n\n### Phaser.Actions.WrapInRectangle()\n\n> 包含在一个边界内  \n> `Phaser.Actions.WrapInRectangle(items, rect [,padding])`\n\n```js\nconst rect = new Phaser.Geom.Rectangle(100, 100, 256, 256) // 创建矩形\nconst groups = scene.add.group()\n// 超出矩形的的元素消失\nPhaser.Actions.WrapInRectangle(\n  groups.getChildren(),\n  rect,\n  30 // 如网页 padding 值一样，默认为：0\n)\n```\n\n## 轨迹上置放精灵\n\n### Phaser.Actions.PlaceOnCircle()\n\n> 圆的轨迹上置放精灵  \n> `Phaser.Actions.PlaceOnCircle(items, circle [,startAngle] [,endAngle])`\n\n```js\nconst groups = scene.add.group()\nconst circle = new Phaser.Geom.Circle(400, 300, 260)\nPhaser.Actions.PlaceOnCircle(\n  groups.getChildren(),\n  circle, // 圆形\n  0, // startAngle: 起始角度，以弧度为单位，默认：0\n  6.28 // endAngle: 停止角度，以弧度为单位，默认：6.28\n)\n```\n\n### Phaser.Actions.PlaceOnEllipse()\n\n> 椭圆的轨迹上置放精灵  \n> `Phaser.Actions.PlaceOnEllipse(items, ellipse [,startAngle] [,endAngle])`\n\n```js\nconst groups = scene.add.group()\nconst ellipse = new Phaser.Geom.Ellipse(400, 300, 260)\nPhaser.Actions.PlaceOnCircle(\n  groups.getChildren(),\n  ellipse, // 椭圆\n  0, // startAngle: 起始角度，以弧度为单位，默认：0\n  6.28 // endAngle: 停止角度，以弧度为单位，默认：6.28\n)\n```\n\n### Phaser.Actions.PlaceOnLine()\n\n> 线  \n> `Phaser.Actions.PlaceOnLine(items, line)`\n\n```js\nconst groups = scene.add.group()\nconst line = new Phaser.Geom.Line(400, 300, 100, 100)\nPhaser.Actions.PlaceOnCircle(\n  groups.getChildren(),\n  line // 线\n)\n```\n\n### Phaser.Actions.PlaceOnRectangle()\n\n> 矩形\n> `Phaser.Actions.PlaceOnRectangle(items, rect [,shift])`\n\n```js\nconst groups = scene.add.group()\nconst rect = new Phaser.Geom.Rectangle(400, 300, 100, 100)\nPhaser.Actions.PlaceOnRectangle(\n  groups.getChildren(),\n  rect, // 矩形\n  1 // 位置偏移量\n)\n```\n\n### Phaser.Actions.PlaceOnTriangle()\n\n> 三角形  \n> `Phaser.Actions.PlaceOnTriangle(items, triangle [,stepRate])`\n\n```js\nconst groups = scene.add.group()\nconst triangle = new Phaser.Geom.Triangle.BuildRight(200, 400, 100, 100)\nPhaser.Actions.PlaceOnTriangle(\n  groups.getChildren(),\n  triangle, // 三角形\n  1 // 步长率，精灵间距\n)\n```\n\n## 轨迹内填充精灵\n\n### Phaser.Actions.RandomCircle()\n\n> 圆  \n> `Phaser.Actions.RandomCircle(items, circle)`\n\n```js\nconst groups = scene.add.group()\nconst circle = new Phaser.Geom.Circle(200, 400, 100, 100)\nPhaser.Actions.RandomCircle(groups.getChildren(), circle)\n```\n\n### Phaser.Actions.RandomEllipse()\n\n> 椭圆  \n> `Phaser.Actions.RandomEllipse(items, ellipse)`\n\n```js\nconst groups = scene.add.group()\nconst ellipse = new Phaser.Geom.Ellipse(200, 400, 100, 100)\nPhaser.Actions.RandomEllipe(groups.getChildren(), ellipse)\n```\n\n### Phaser.Actions.RandomLine()\n\n> 线  \n> `Phaser.Actions.RandomLine(items, line)`\n\n```js\nconst groups = scene.add.group()\nconst line = new Phaser.Geom.Line(200, 400, 100, 100)\nPhaser.Actions.RandomLine(groups.getChildren(), line)\n```\n\n### Phaser.Actions.RandomRectangle()\n\n> 矩形  \n> `Phaser.Actions.RandomRectangle(items, rect)`\n\n```js\nconst groups = scene.add.group()\nconst rect = new Phaser.Geom.Rectangle(200, 400, 100, 100)\nPhaser.Actions.RandomRectangle(groups.getChildren(), rect)\n```\n\n### Phaser.Actions.RandomTriangle()\n\n> 三角形  \n> `Phaser.Actions.RandomTriangle(items, triangle)`\n\n```js\nconst groups = scene.add.group()\nconst triangle = new Phaser.Geom.Triangle.BuildEquilateral(200, 400, 100, 100)\nPhaser.Actions.RandomTriangle(groups.getChildren(), triangle)\n```\n\n## 旋转\n\n### Phaser.Actions.Rotate()\n\n> 每个精灵绕自身旋转  \n> `Phaser.Actions.Rotate(items, value [,step] [,index] [,direction])`\n\n```js\nconst groups = scene.add.group()\nPhaser.Actions.Rotate(\n  groups.getChildren(),\n  0.01,\n  1, // value = value + step * i 后面递增\n  0, // 从 items 中下标为 0 开始搜索起\n  1 // direction: 1正向遍历  -1返回遍历\n)\n```\n\n### Phaser.Actions.RotateAround()\n\n> 绕圆心旋转，随机填充  \n> `Phaser.Actions.RotateAround(items, point, angle)`\n\n```js\nconst groups = scene.add.group()\nPhaser.Actions.RotateAround(\n  groups.getChildren(),\n  { x: 100, y: 100 }, // 圆心的点\n  0 // 旋转的角度，以弧度为单位\n)\n```\n\n### Phaser.Actions.RotateAroundDistance()\n\n> 绕圆心距离旋转，轨迹上置放精灵  \n> `Phaser.Actions.RotateAroundDistance(items, point, angle, distance)`\n\n```js\nconst groups = scene.add.group()\nPhaser.Actions.RotateAroundDistance(\n  groups.getChildren(),\n  { x: 100, y: 100 }, // 圆心的点\n  0, // 旋转的角度，以弧度为单位\n  1 // 到旋转点的距离\n)\n```\n"}))},{id:30,parentId:0,text:"Animation",path:"/animation",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"未完善\n\n## 动画参数\n\n```js\n// atlas、spritesheet、png 都可以做成动画\nconst config = {\n  key: 'k', // 动画名称\n  frames: scene.anims.generateFrameNames('atlas'), // 帧\n  repeat: 6 // 循环次数\n}\n```\n\n## 创建动画\n\n```js\nscene.anims.create(config) // 创建动画\n```\n\n## 动画属性\n\n```js\nscene.anims.isPaused // 是否暂停动画\nscene.anims.currentAnim.frames // 数组下的 索引:index 进度:progress\n```\n\n## 动画方法\n\n```js\nscene.play('k') // 播放动画\nscene.anims.load('walk') // 精灵加载动画\nscene.anims.play('walk') // 播放动画\nscene.anims.pause() // 暂停动画\nscene.anims.resume() // 继续动画\nscene.anims.restart() // 重新动画\nscene.anims.setRepeat(7) // 循环7次\nconst k = scene.anims.get('k') // 获取动画\nk.addFrame(scene.anims.generateFrameNames()) // 原动画再加动画\n```\n\n## 监听动画的添加\n\n```js\nscene.anims.on(Phaser.Animations.Events.ADD_ANIMATION, function() {}, scene) // 监听动画添加\n```\n"}))},{id:40,parentId:0,text:"Audio",path:"/audio",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 音频配置\n\n```js\nconst config = {\n  audio: {\n    disableWebAudio: true, // 默认是WebAudio，禁用则为HTML Audio\n    noAudio: true // 不使用 Audio\n  }\n}\n```\n\n## 加载音频\n\n```js\nscene.load.audio('audio', ['audio.ogg', 'audio.mp3'], { instances: 2 })\nscene.load.audioSprite('audio', 'audio.json', ['audio.ogg', 'audio.mp3'])\n```\n\n## 添加音频\n\n```js\nconst audio = scene.sound.add('audio', { loop: true }) // 获取音频\nconst audios = scene.cache.json.get('audio').spritemap // 获取所有音频\nconst audio = scene.sound.playAudioSprite('audio', 'name') // 获取片段音频\n```\n\n## 音频属性设置（精灵）\n\n```js\naudio.rate = 1.5 // 加快速率\naudio.detune = 600 // 音色偏移\naudio.rate = 1 // 减慢速率\naudio.detune = 0 // 音色偏移\naudio.mute = true // 静音\naudio.volume = 0.5 // 音量\naudio.seek = 0 // 跳跃到新位置\n```\n\n## 音频属性设置（场景）\n\n```js\nscene.sound.rate = 1.5 // 加快速率\nscene.sound.detune = 600 // 音色偏移\nscene.sound.rate = 1 // 减慢速率\nscene.sound.detune = 0 // 音色偏移\nscene.sound.mute = true // 静音\nscene.sound.volume = 0.5 // 音量\nscene.sound.seek = 0 // 跳跃到新位置\n```\n\n## 音频方法调用（精灵）\n\n```js\naudio.play() // 播放\naudio.pause() // 暂停\naudio.resume() // 继续\naudio.stop() // 停止\n```\n\n## 音频方法调用（场景）\n\n```js\nscene.sound.pauseAll() // 全部暂停\nscene.sound.resumeAll() // 全部恢复\nscene.sound.stopAll() // 全部停止\n```\n\n## 音频监听（精灵）\n\n```js\naudio.addMarker({\n  name: 'loop',\n  start: 0,\n  duration: 7.68,\n  config: { loop: true }\n}) // 添加标识\naudio.play('loop', { delay: 0 }) // 循环延迟时间，播放\naudio.once('looped', function(sound) {}) // 监听循环结束时\naudio.once('complete', function(sound) {}) // 原 ended 改为 complete 音频播放结束回调\n```\n\n## 音频监听（场景）\n\n```js\nscene.sound.once('mute', function(soundManager, value) {}) // 监听静音\nscene.sound.once('volume', function(soundManager, value) {}) // 监听音量\nscene.sound.once('pauseall', function(soundManager, value) {}) // 监听全部暂停\nscene.sound.once('resumeall', function(soundManager, value) {}) // 监听全部恢复\nscene.sound.once('stopall', function(soundManager, value) {}) // 监听全部停止\nscene.sound.once('unlocked', function(soundManager) {}) // 监听解锁\n```\n"}))},{id:50,parentId:0,text:"Cache",path:"/cache",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## json 文件\n\n```js\nscene.load.json('data', 'data.json') // 加载\nscene.cache.json.get('data') // 读取\n```\n\n## txt 文件\n\n```js\nscene.load.text('data', 'data.txt') // 加载\nscene.cache.text.get('data') // 读取\n```\n\n## xml 文件\n\n```js\nscene.load.xml('data', 'data.xml') // 加载\nscene.cache.xml.get('data') // 读取\n```\n"}))},{id:60,parentId:0,text:"Camera",path:"/camera",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 方法二\n\n123123\n\n"}))},{id:70,parentId:0,text:"Components",exact:!0,path:"/components"},{id:71,parentId:70,text:"Data",path:"/components/data",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 设置数据（精灵）\n\n```js\nsprite.setDataEnabled() // 开启数据功能\nsprite.data.set('data', 10) // 设置数据\nsprite.data.get('data') // 读取数据\nsprite.data.values.data = 20 // 更改数据\nsprite.data.query(/^10/) // 查询数据\n```\n\n## 设置数据（场景）\n\n```js\nscene.setDataEnabled() // 开启数据功能\nscene.data.set('data', 10) // 设置数据\nscene.data.get('data') // 读取数据\nscene.data.values.data = 20 // 更改数据\nscene.data.query(/^10/) // 查询数据\n```\n\n## 设置多个字段\n\n```js\nsprite.setData({ name: 'gem', level: 2 }) // 设置多个数据\nsprite.setData('name', 'gem') // 设置单个数据\nsprite.getData('name') // 获取数据\n```\n\n## 新数据添加监听\n\n```js\nsprite.on('changedata-data', (gameObject, value) => {}) // 监听 data 字段变化\nsprite.on('changedata', (gameObject, key, value) => {}) // 监听数据变化\nsprite.on('setdata', (gameObject, key, value) => {}) // 监听新字段设置\n```\n"}))},{id:80,parentId:0,text:"DepthSorting",path:"/depthsorting",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 设置层级\n\n```js\nsprite.depth = 1\nsprite.setDepth(1)\n```\n\n## 一些函数\n\n```js\nscene.children.bringToTop(scene.children.getAt(0)) // 将最底元素置顶\nscene.children.remove(scene.children.getRandom()) // 随机移除\n```\n"}))},{id:90,parentId:0,text:"Display",path:"/display",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 简介\n\n> 相对定位、透明度设置、混合模式、颜色处理、遮罩层、色彩设置\n\n## Align\n\n> 精灵相对定位\n\n1. 正中间\n\n   ```js\n   Phaser.Display.Align.In.Center(child, parent)\n   ```\n\n1. 上中间\n\n   ```js\n   Phaser.Display.Align.In.TopCenter(child, parent)\n   ```\n\n1. 下中间\n\n   ```js\n   Phaser.Display.Align.In.BottomCenter(child, parent)\n   ```\n\n1. 左中间\n\n   ```js\n   Phaser.Display.Align.In.LeftCenter(child, parent)\n   ```\n\n1. 右中间\n\n   ```js\n   Phaser.Display.Align.In.RightCenter(child, parent)\n   ```\n\n1. 左上角\n\n   ```js\n   Phaser.Display.Align.In.TopLeft(child, parent)\n   ```\n\n1. 右上角\n\n   ```js\n   Phaser.Display.Align.In.TopRight(child, parent)\n   ```\n\n1. 左下角\n\n   ```js\n   Phaser.Display.Align.In.BottomLeft(child, parent)\n   ```\n\n1. 右下角\n\n   ```js\n   Phaser.Display.Align.In.BottomRight(child, parent)\n   ```\n\n## Alpha\n\n> 设置精灵透明度\n\n1. 整体设置\n\n   ```js\n   image.setAlpha(0.2)\n   ```\n\n1. 不同位置（方法）\n\n   ```js\n   // top left, top right, bottom left, bottom right\n   image.setAlpha(0, 0, 1, 1)\n   ```\n\n1. 不同位置（属性）\n\n   ```js\n   image.alphaTopLeft = 0\n   image.alphaTopRight = 0\n   image.alphaBottomLeft = 0\n   image.alphaBottomRight = 0\n   ```\n\n1. 清除透明度\n\n   ```js\n   image.clearAlpha()\n   ```\n\n1. 透明度动画\n\n   ```js\n   scene.tweens.add({\n     targets: image, // 精灵\n     alphaTopLeft: {\n       value: 1, // 透明度\n       duration: 5000, // 持续 5000ms\n       ease: 'Power1', // 动画曲线\n       delay: 1000 // 延迟 1000ms\n     }\n   })\n   ```\n\n## Blend Modes\n\n1. 基本\n\n   ```js\n   const renderer = scene.sys.game.renderer\n   const modeIndex = renderer.addBlendMode([gl.ZERO, gl.SRC_COLOR], gl.FUNC_ADD)\n   image.setBlendMode(modeIndex)\n   ```\n\n## Color\n\n1. 内置方法\n\n   ```js\n   const color = new Phaser.Display.Color(150, 0, 0)\n   color.brighten(10) // 亮度\n   color.darken(10) // 变暗\n   color.lighten(10) // 减轻颜色\n   ```\n\n1. 颜色转换\n\n   ```js\n   // Hex 格式转 Color 对象\n   Phaser.Display.Color.HexStringToColor('#ff0000')\n\n   // RGB 格式转 Color 对象\n   Phaser.Display.Color.RGBStringToColor('rgba(255, 0, 0, 1)')\n\n   // Value\n   Phaser.Display.Color.ValueToColor(0xff0000)\n   Phaser.Display.Color.ValueToColor('#ff0000')\n   Phaser.Display.Color.ValueToColor('#f00')\n   Phaser.Display.Color.ValueToColor('rgba(255, 0, 0, 1)')\n   ```\n\n1. 随机颜色\n\n   ```js\n   color.random(50)\n   color.randomGray(50) // 随机灰色\n   ```\n\n1. HSV 颜色\n\n   ```js\n   Phaser.Display.Color.HSVColorWheel()\n   ```\n\n## Masks\n\n1. 创建 mask 方式： `createBitmapMask()`\n\n   ```js\n   const mask = image.createBitmapMask()\n   ```\n\n1. 创建 mask 方式： `createGeometryMask()`\n\n   ```js\n   const shape = scene.make.graphics()\n   const mask = shape.createGeometryMask()\n   ```\n\n1. 创建 mask 方式：`Phaser.Display.Masks.BitmapMask()`\n\n   ```js\n   const sprite = scene.make.sprite({\n     x: 100,\n     y: 100,\n     key: 'sp',\n     add: false\n   })\n   new Phaser.Display.Masks.BitmapMask(this, sprite)\n   ```\n\n1. 使用 mask\n\n   ```js\n   graphics.mask = mask\n   graphics.setMask(mask)\n   sprite.setMask(mask)\n   particles.setMask(mask)\n   ```\n\n## Tint\n\n1. 整体设置\n\n   ```js\n   image.setTint(0xff0000)\n   ```\n\n1. 不同位置\n\n   ```js\n   // top left, top right, bottom left, bottom right\n   image.setTint(0xff0000, 0xffff00, 0x00ffff0, 0xff00ff)\n   ```\n\n1. 完全填充\n\n   ```js\n   image.setTintFill(0xff0000) // 给精灵填充颜色，精灵只剩下一个形状\n   ```\n\n1. 清除\n\n   ```js\n   image.clearTint()\n   ```\n"}))},{id:100,parentId:0,text:"Events",path:"/events",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 方法一\n\n123123\n"}))},{id:110,parentId:0,text:"GameConfig",path:"/gameconfig",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 配置\n\n```js\nconst config = {\n  type: Phaser.AUTO, // 渲染方式 Phaser.CANVAS Phaser.WEBGL Phaser.HEADLESS\n  parent: 'app', // 父容器\n  canvas: myCanvas, // 自定义\n  context: myContext, // 自定义\n  seed: [(Date.now() * Math.random()).toString()], // 随机种子\n  title: 'test', // 控制台中内容\n  url: 'https://www.hemmao.com', // 控制台中的内容\n  version: '1.0.1',\n  banner: false, // 隐藏\n  pixelArt: true, // 像素模式， 像素更清晰\n  roundPixels: true, // 取整\n  transparent: true, // 透明\n  banner: {\n    // 控制台中内容\n    text: '#ffffff',\n    background: ['#fff200', '#38f0e8'],\n    hidePhaser: true\n  }\n}\n```\n\n## 获取配置信息\n\n```js\ngame.config.gameTitle // 获取控制台标题\ngame.config.gameURL // 获取控制台URL\n```\n\n## 创建游戏\n\n```js\nnew Phaser.Game(config) // 创建游戏\nnew Phaser.Game(config2) // 创建多个游戏实例\n```\n\n## 销毁游戏\n\n```js\nscene.sys.game.destroy(true) // 销毁游戏\n```\n"}))},{id:120,parentId:0,text:"GameObjects",path:"/gameobjects",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 方法一\n\n123123\n"}))},{id:130,parentId:0,text:"Geom",exact:!0,path:"/geom"},{id:131,parentId:130,text:"Circle",path:"/geom/circle",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 图形设置\n\n```js\nconst graphics = scene.add.graphics({\n  lineStyle: {\n    // 线的样式\n    width: 2,\n    color: 0x00ff00\n  },\n  fillStyle: {\n    // 填充的样式\n    color: 0xff00ff\n  }\n})\n```\n\n## 画圆\n\n```js\nconst circle = new Phaser.Geom.Circle(200, 200, 100)\ngraphics.fillCircleShape(circle) // 填充一个圆\ngraphics.strokeCircleShape(circle) // 描边\n```\n\n## 圆的属性\n\n```js\ncircle.diameter = circle.radius // 直径等于原半径\ncircle.radius = 10 // 半径\ncircle.x = 10 // 横坐标\ncircle.y = 10 // 纵坐标\ncircle.left = 10\ncircle.top = 10\ncircle.bottom = 10\ncircle.right = 10\n```\n\n## 圆的方法\n\n> 圆的静态方法，查看 [Phaser.Geom.Circle](/phaser3/const/staticmethod)\n\n```js\ncircle.setTo(100, 100, 50) // 设置到指定位置与大小\ncircle.contains(pointer.x, pointer.y) // 点是否在一个圆中\ncircle.setPosition(100, 200) // 设置圆心位置\ncircle.getPoint(0.1, point) // 参数1:弧度，参数2: 基于 circle 改变 point 的值\ncircle.getPoints(32) // 获取圆周上的一些点的坐标\ncircle.getRandomPoint() // 获取圆内一些点的坐标\ncircle.isEmpty() // 圆为空时， radius 为 0 或小于 0\ncircle.setEmpty()\n```\n\n## 圆的一些信息\n\n```js\nconst area = Phaser.Geom.Circle.Area(circle) // 获取圆的面积\nconst circumference = Phaser.Geom.Circle.Circumference(circle) // 获取圆的周长\n```\n"}))},{id:132,parentId:130,text:"Ellipse",path:"/geom/ellipse",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 方法一\n\n123123\n"}))},{id:133,parentId:130,text:"Intersects",path:"/geom/intersects",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 方法一\n\n123123\n"}))},{id:134,parentId:130,text:"Line",path:"/geom/line",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 方法一\n\n123123\n"}))},{id:135,parentId:130,text:"Point",path:"/geom/point",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 方法一\n\n123123\n"}))},{id:136,parentId:130,text:"Polygon",path:"/geom/polygon",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 方法一\n\n123123\n"}))},{id:137,parentId:130,text:"Rectangle",path:"/geom/rectangle",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 方法一\n\n123123\n"}))},{id:138,parentId:130,text:"Triangle",path:"/geom/triangle",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 方法一\n\n123123\n"}))},{id:140,parentId:0,text:"Input",path:"/input",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 方法一\n\n123123\n"}))},{id:150,parentId:0,text:"Loader",exact:!0,path:"/loader"},{id:151,parentId:150,text:"Webfont",path:"/loader/webfont",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 安装使用 webfont.js\n\n> https://github.com/typekit/webfontloader\n\n1. 安装\n\n   ```bash\n   yarn add webfontloader\n   ```\n\n1. 使用\n\n   ```js\n   import * as Webfont from 'webfontloader\n   ```\n\n## 编写 fonts.css\n\n```css\n@font-face {\n  font-family: 'customname';\n  src: url('customname.woff2') format('woff2'), url('customname.woff') format('woff');\n  font-weight: normal;\n  font-style: normal;\n}\n```\n\n## 引入自定义字体\n\n```js\nWebfont.load({\n  custom: {\n    families: ['customname'],\n    urls: ['fonts.css']\n  }\n})\n```\n\n## 使用自定义字体\n\n```js\nscene.add.text(0, 0, 'custom font', {\n  fontFamily: 'customname'\n})\n```\n"}))},{id:160,parentId:0,text:"Path",path:"/path",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 方法一\n\n123123\n"}))},{id:170,parentId:0,text:"Physics",path:"/physics",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 方法一\n\n123123\n"}))},{id:180,parentId:0,text:"Plugins",path:"/plugins",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 方法一\n\n123123\n"}))},{id:190,parentId:0,text:"Pools",path:"/pools",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 方法一\n\n123123\n"}))},{id:200,parentId:0,text:"Scalemanager",path:"/scalemanager",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 方法一\n\n123123\n"}))},{id:210,parentId:0,text:"Scenes",path:"/scenes",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 方法一\n\n123123\n"}))},{id:220,parentId:0,text:"Snapshot",path:"/snapshot",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 方法一\n\n123123\n"}))},{id:230,parentId:0,text:"Spine",path:"/spine",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 方法一\n\n123123\n"}))},{id:240,parentId:0,text:"Textures",path:"/textures",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 方法一\n\n123123\n"}))},{id:250,parentId:0,text:"Time",path:"/time",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 方法一\n\n123123\n"}))},{id:260,parentId:0,text:"Timestep",path:"/timestep",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 方法一\n\n123123\n"}))},{id:270,parentId:0,text:"Transform",path:"/transform",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 方法一\n\n123123\n"}))},{id:280,parentId:0,text:"Tweens",path:"/tweens",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 方法一\n\n123123\n"}))},{id:290,parentId:0,text:"Utils",path:"/utils",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## 方法一\n\n123123\n"}))},{id:300,parentId:0,text:"Const",exact:!0,path:"/const"},{id:301,parentId:300,text:"Property",path:"/const/property",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## Phaser\n\n```js\nPhaser.AUTO // 0 设置渲染类型\nPhaser.CANVAS // 1 canvas 渲染\nPhaser.WEBGL // 2 webgl 渲染\nPhaser.HEADLESS // 3 无头渲染\nPhaser.CSSBlendModes // 混合模式为 css 混合模式\nPhaser.NONE // 4 方向常量\nPhaser.UP // 5 方向常量\nPhaser.DOWN // 6 方向常量\nPhaser.LEFT // 7 方向常量\nPhaser.RIGHT // 8 方向常量\nPhaser.FOREVER // -1 永远不断\nPhaser.VERSION // 版本号\n```\n\n## Phaser.Actions\n\n```js\nPhaser.Actions.Angle(items, value [,step] [,index] [,direction]) // 批量操作角度\nPhaser.Actions.Call(items, callback, context) // 遍历回调\nPhaser.Actions.GetFirst(items, compare [,index]) // 查找第一个符合属性值为 compare 属性的对象\nPhaser.Actions.GetLast(items, compare [,index]) //  查找最后一个符合属性值为 compare 属性的对象\nPhaser.Actions.GridAlign(items, options) // 对数组元素排列\n```\n\n## Phaser.Animations\n\n## Phaser.BlendModes\n\n## Phaser.Cache\n\n## Phaser.Cameras\n\n## Phaser.Core\n\n## Phaser.Create\n\n## Phaser.Curves\n\n## Phaser.Data\n\n## Phaser.Device\n\n## Phaser.Display\n\n## Phaser.DOM\n\n## Phaser.Events\n\n## Phaser.GameObjects\n\n## Phaser.Geom\n\n## Phaser.Input\n\n## Phaser.Loader\n\n## Phaser.Math\n\n```js\nPhaser.Math.PI2 // 2π\n```\n\n## Phaser.Physics\n\n## Phaser.Plugins\n\n## Phaser.Renderer\n\n## Phaser.Scale\n\n## Phaser.ScaleModes\n\n## Phaser.Scenes\n\n## Phaser.Sound\n\n## Phaser.Structs\n\n## Phaser.Textures\n\n## Phaser.Tilemaps\n\n## Phaser.Time\n\n## Phaser.Tweens\n\n## Phaser.Types\n\n## Phaser.Utils\n"}))},{id:302,parentId:300,text:"Static Method",path:"/const/staticmethod",component:()=>a.createElement(a.Fragment,null,a.createElement(K,{source:"## Phaser\n\n## Phaser.Actions\n\n## Phaser.Animations\n\n## Phaser.BlendModes\n\n## Phaser.Cache\n\n## Phaser.Cameras\n\n## Phaser.Core\n\n## Phaser.Create\n\n## Phaser.Curves\n\n## Phaser.Data\n\n## Phaser.Device\n\n## Phaser.Display\n\n## Phaser.DOM\n\n## Phaser.Events\n\n## Phaser.GameObjects\n\n## Phaser.Geom\n\n```js\nPhaser.Geom.Circle.Clone(circle) // 克隆一个圆\nPhaser.Geom.Circle.ContainsPoint(circle, point) // 点是否在圆中\nPhaser.Geom.Circle.ContainsRect(circle, rect) // 矩形是否在圆中\nPhaser.Geom.Circle.CopyFrom(bigCircle, smallCircle) // 小圆填充到大圆中\nPhaser.Geom.Circle.Equals(circle1, circle2) // 比较两圆大小是否相等\nPhaser.Geom.Circle.OffsetPoint(circle, point) // 圆相对点的纵横偏移\nPhaser.Geom.Circle.Offset(circle, xOffset, yOffset) // 同 OffsetPoint\nPhaser.Geom.Circle.GetBounds(circle) // 获取圆的外层矩形对象\nPhaser.Geom.Circle.CircumferencePoint(circle, Phasr.Math.PI2, point) // 在圆上的点，可以是矩形、圆形\n```\n\n## Phaser.Input\n\n## Phaser.Loader\n\n## Phaser.Math\n\n## Phaser.Physics\n\n## Phaser.Plugins\n\n## Phaser.Renderer\n\n## Phaser.Scale\n\n## Phaser.ScaleModes\n\n## Phaser.Scenes\n\n## Phaser.Sound\n\n## Phaser.Structs\n\n## Phaser.Textures\n\n## Phaser.Tilemaps\n\n## Phaser.Time\n\n## Phaser.Tweens\n\n## Phaser.Types\n\n## Phaser.Utils\n"}))}],Z=[{path:"/",exact:!0,component:({location:n,history:e})=>(C(()=>{const t=o(n.search).get("redirect");t?e.push(decodeURIComponent(t).replace("/phaser3/","")):e.push("/home")},[]),a.createElement(a.Fragment,null))},{path:"/404",exact:!0,component:()=>a.createElement("h1",null,"404")},{path:"/",exact:!1,component:({routes:n,location:e,history:t})=>{const[r,o]=M(!1);return a.createElement(s.Layout,null,a.createElement(F,null,a.createElement("div",{className:"phaser3-logo"},a.createElement(s.Icon,{type:r?"menu-unfold":"menu-fold",onClick:()=>{o(!r)}})," ","Phaser3 笔记")),a.createElement(s.Layout,null,a.createElement(D,{trigger:null,breakpoint:"lg",width:"256",collapsedWidth:0,collapsed:r,onCollapse:n=>{o(n)}},a.createElement(T,null)),a.createElement(w,{className:"phaser3-content markdown-body"},a.createElement(A,{routes:n})),a.createElement(D,{collapsed:r,collapsedWidth:0},a.createElement(O,null))))},routes:[...z.filter(n=>!n.hidden),{redirect:!0,from:"*",to:"/404"}]}];r.render(a.createElement(s.ConfigProvider,{locale:x.a},a.createElement(n=>{const[e,t]=m(P,g),r={state:e,dispatch:t};return a.createElement(h.Provider,{value:r},n.children)},null,a.createElement(()=>a.createElement(E.BrowserRouter,{basename:"/phaser3"},a.createElement(A,{routes:Z})),null))),document.getElementById("app"))}]);